{"version":3,"file":"static/js/553.21c3e8c6.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,GAA9C,SAC2BC,MAAMF,EAAKC,GADtC,YACUE,EADV,QAEoBC,GAFpB,iCAGgBD,EAASE,OAHzB,gDAIUC,QAAQC,OAAO,IAAIC,MAAM,cAJnC,2GAOO,SAASC,IACZ,OAAOV,EAAY,GAAD,OAAIF,EAAJ,uCAA2CC,IAI1D,SAASY,EAAkBC,GAC9B,OAAOZ,EAAY,GAAD,OAAIF,EAAJ,kBAAsBc,EAAtB,oBAAyCb,IAGxD,SAASc,EAAkBD,GAChC,OAAOZ,EAAY,GAAD,OACbF,EADa,kBACKc,EADL,4BACgCb,IAI7C,SAASe,EAAkBF,GAChC,OAAOZ,EAAY,GAAD,OACbF,EADa,kBACKc,EADL,4BACgCb,IAI7C,SAASgB,EAAiBC,GAC/B,OAAOhB,EAAY,GAAD,OACbF,EADa,iCACoBC,EADpB,kBACiCiB,M,2HCKrD,MAnCA,YAAkC,IAAbC,EAAY,EAAZA,SACnB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAiBE,OACE,kBAAOH,SAZU,SAAAI,GACnBA,EAAMC,iBACuB,KAAvBH,EAAYI,QAKhBN,EAASE,GACPC,EAAe,KALbI,MAAM,+BASV,WACM,kBAEIC,KAAK,OACLC,YAAY,cACZC,MAAOR,EACPS,SAtBY,SAAAP,GACxBD,EAAeC,EAAMQ,cAAcF,MAAMG,mBAuBjC,mBAAQL,KAAK,SAAb,UACA,2CCaZ,MAvCA,WAAuB,IAAD,EAEpB,GAAwCM,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCf,EAAAA,EAAAA,UAAQ,UAAEc,EAAaE,IAAI,gBAAnB,QAA+B,IAA7E,eAAOlB,EAAP,KAAoBmB,EAApB,KACA,GAA4BjB,EAAAA,EAAAA,UAAS,IAArC,eAAOkB,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAgBf,OARFC,EAAAA,EAAAA,YAAU,WACHxB,IAGLD,EAAAA,EAAAA,IAAiBC,GAAayB,MAAK,SAAArC,GAAQ,OAAEiC,EAAUjC,EAASsC,cAC/D,CAAC1B,KAIE,iCACI,SAAC,EAAD,CAAWC,SAhBI,SAAAD,GACvBmB,EAAenB,GACfiB,EAAgB,CAAEU,MAAO3B,IACzBqB,EAAU,OAcPD,IACC,wBACGA,EAAOQ,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMX,GAAxC,SACGO,EAAMK,SAFFL,EAAME","sources":["services/fethApi.js","components/Searchbar/Searchbar.js","views/MoviesView/MoviesView.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '0b2bea78971d650356cc30f3af111630';\n\nasync function fetchMovies(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n    return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\n\n\nexport function fetchMovieDetails(movieId) {\n    return fetchMovies(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n}\n\nexport function fetchSearchMovie(searchQuery) {\n  return fetchMovies(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n}","import {useState} from \"react\";\n\n\nfunction Searchbar({ onSubmit }) {\n  const [filmRequest, setFilmRequest] = useState('');\n\n  const handleInputChange = event => {\n    setFilmRequest(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n      if (filmRequest.trim() === '') {\n          alert('Enter the name of the film');\n            return;\n      };\n\n      onSubmit(filmRequest);\n        setFilmRequest('');\n    };\n\n    return (\n      <form  onSubmit={handleSubmit}>            \n            <input\n               \n                type=\"text\"            \n                placeholder=\"Search film\"\n                value={filmRequest}\n                onChange={handleInputChange}\n            />\n            <button type=\"submit\"  >\n            <span >Search</span>\n            </button>\n        </form>  \n    )\n}\n\n\nexport default Searchbar;","import { useState, useEffect } from 'react';\nimport { Link,useSearchParams,useLocation } from 'react-router-dom';\nimport { fetchSearchMovie } from 'services/fethApi';\nimport Searchbar from 'components/Searchbar/Searchbar';\n\nfunction MoviesView() {\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState( searchParams.get('query') ?? '');\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  const handleFormSubmit = searchQuery => {\n    setSearchQuery(searchQuery);\n    setSearchParams({ query: searchQuery });\n    setMovies([]);\n  };\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    fetchSearchMovie(searchQuery).then(response=>setMovies(response.results));\n  }, [searchQuery]);\n\n\n    return (\n        <>\n            <Searchbar onSubmit={handleFormSubmit} />\n      {movies && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n        </>\n    )\n};\n\nexport default MoviesView;"],"names":["BASE_URL","KEY","fetchMovies","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","fetchSearchMovie","searchQuery","onSubmit","useState","filmRequest","setFilmRequest","event","preventDefault","trim","alert","type","placeholder","value","onChange","currentTarget","toLowerCase","useSearchParams","searchParams","setSearchParams","get","setSearchQuery","movies","setMovies","location","useLocation","useEffect","then","results","query","map","movie","to","id","state","from","title"],"sourceRoot":""}
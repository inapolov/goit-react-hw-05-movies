{"version":3,"file":"static/js/427.99438368.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,GAA9C,SAC2BC,MAAMF,EAAKC,GADtC,YACUE,EADV,QAEoBC,GAFpB,iCAGgBD,EAASE,OAHzB,gDAIUC,QAAQC,OAAO,IAAIC,MAAM,cAJnC,2GAOO,SAASC,IACZ,OAAOV,EAAY,GAAD,OAAIF,EAAJ,uCAA2CC,IAI1D,SAASY,EAAkBC,GAC9B,OAAOZ,EAAY,GAAD,OAAIF,EAAJ,kBAAsBc,EAAtB,oBAAyCb,IAGxD,SAASc,EAAkBD,GAChC,OAAOZ,EAAY,GAAD,OACbF,EADa,kBACKc,EADL,4BACgCb,IAI7C,SAASe,EAAkBF,GAChC,OAAOZ,EAAY,GAAD,OACbF,EADa,kBACKc,EADL,4BACgCb,IAI7C,SAASgB,EAAiBC,GAC/B,OAAOhB,EAAY,GAAD,OACbF,EADa,iCACoBC,EADpB,kBACiCiB,M,kHC7BtC,SAASC,IACpB,IAAQL,GAAYM,EAAAA,EAAAA,MAAZN,QACR,GAA0BO,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACVR,EAAAA,EAAAA,IAAkBF,GAASW,MAAK,SAAAnB,GAAQ,OAAEiB,EAASjB,EAASoB,cACzD,CAACZ,KAKA,8BAEsB,IAAjBQ,EAAMK,QACP,wBACGL,EAAMM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACP,2BACI,qCAAaD,MACb,uBAAIC,MAFCF,SAQf","sources":["services/fethApi.js","views/Reviews/Reviews.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '0b2bea78971d650356cc30f3af111630';\n\nasync function fetchMovies(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n    return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\n\n\nexport function fetchMovieDetails(movieId) {\n    return fetchMovies(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n}\n\nexport function fetchSearchMovie(searchQuery) {\n  return fetchMovies(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n}","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { fetchMovieReviews } from \"services/fethApi\";\n\nexport default function Reviews() {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState([]);\n\n    useEffect(() => {\n    fetchMovieReviews(movieId).then(response=>setMovie(response.results));\n    }, [movieId]);\n\n    \n        \n    return (\n        <>\n           \n            {movie.length !== 0 ? (\n            <ul>\n              {movie.map(({ id, author, content }) => (\n                  <li key={id}>                      \n                      <h3>Author: {author}</h3>\n                      <p>{content}</p>\n\n                  </li>\n              ))}\n            </ul>\n            ):(\n            <p>We don`t have any reviews for this movie</p>\n          )}\n        </>\n    )\n};"],"names":["BASE_URL","KEY","fetchMovies","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","fetchSearchMovie","searchQuery","Reviews","useParams","useState","movie","setMovie","useEffect","then","results","length","map","id","author","content"],"sourceRoot":""}